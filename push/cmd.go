package push

import (
	kingpin "github.com/alecthomas/kingpin/v2"
)

type PushCmd struct {
	*kingpin.CmdClause

	idFlag   *string
	pathFlag *string
}

func RegisterCmd(app *kingpin.Application) *PushCmd {
	pushCmd := app.Command("push", `Push a configuration file to be managed.
The 'push' command will make the specified configuration file to be managed by Laser.

Push expects the following variables:

	'id': an identifier to your file. Laser will use the identifier to identify unique files.
	'path': the path of the configuration file that will be pushed and also where the final sync'ed file will be placed.

Example:

	laser push --id=cmd/loki/loki-local-config --path=cmd/loki/loki-local-config.yaml

You'll find the generated file under '.laser/data.yaml'. There you can make adjustments
to the file to be generated by changing the its 'contents' property.
One common adjustment is to substitute values with '{{Variables}}'.

After running 'sync', Laser will regenerate your file using the contents specified under '.laser/data.yaml'.`)

	return &PushCmd{
		CmdClause: pushCmd,
		idFlag:    pushCmd.Flag("id", "Configuration file identifier").Required().String(),
		pathFlag:  pushCmd.Flag("path", "Path to the configuration file").Required().Short('p').String(),
	}
}
